name: Build & Push Docker

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: self-hosted

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: üì• Cloner le d√©p√¥t
        uses: actions/checkout@v4

      # 1) [OPTION RECOMMAND√âE] Supprimer le 'credsStore' Docker Desktop avant le login
      #    Sous Windows, Docker Desktop stocke par d√©faut les credentials
      #    dans le Credential Manager Windows, ce qui peut bloquer Buildx.
      #    Cette √©tape retire la cl√© 'credsStore' du fichier config.json.
      - name: ‚úÇÔ∏è Retirer le Docker Desktop credStore
        shell: pwsh
        run: |
          $configPath = \"$Env:USERPROFILE\\.docker\\config.json\"
          if (Test-Path $configPath) {
            # Convertit le JSON en objet PowerShell
            $json = Get-Content $configPath -Raw | ConvertFrom-Json
            if ($json.credsStore) {
              $json.PSObject.Properties.Remove('credsStore')
            }
            # R√©√©crit le fichier JSON
            $json | ConvertTo-Json -Depth 10 | Set-Content $configPath
          }

      # 2) Login Docker Hub via docker/login-action
      #    Stocke les identifiants (ou le token) dans config.json.
      - name: üîê Connexion √† Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3) Extraire les m√©tadonn√©es (tags, labels) pour Docker.
      #    Indique le namespace + repository cibles sur Docker Hub.
      - name: üè∑Ô∏è Extraire les m√©tadonn√©es Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ secrets.DOCKER_USERNAME }}/tpm-app

      # 4) Build & Push l‚Äôimage vers Docker Hub
      #    On fixe la version exact du build-push-action recommand√©e.
      - name: üê≥ Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # 5) (Optionnel) G√©n√©rer une attestation d‚Äôimage (s√©curit√© Supply Chain)
      - name: üõ°Ô∏è G√©n√©rer une attestation d‚Äôimage
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: docker.io/${{ secrets.DOCKER_USERNAME }}/tpm-app
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      # 6) D√©ploiement local (si tu souhaites tester l'image en local sur ton runner)
      - name: üöÄ D√©ploiement local
        shell: pwsh
        run: |
          docker stop tpm-app-container || $true
          docker rm tpm-app-container || $true
          docker run -d --name tpm-app-container -p 8080:5000 docker.io/${{ secrets.DOCKER_USERNAME }}/tpm-app:latest
